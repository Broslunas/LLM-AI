---
export const prerender = false;
import MainLayout from "../layouts/MainLayout.astro";
import { config } from 'dotenv';

config();

const MONGO_URI = process.env.MONGO_URI || '';
if (!MONGO_URI) {
  throw new Error('MONGO_URI is not defined in the environment variables.');
}

// Check if the user is already logged in
const cookies = Astro.request.headers.get('cookie') || '';
const isLoggedIn = cookies.includes('loggedIn=true');
if (isLoggedIn) {
  return Astro.redirect('/');
}
---
<MainLayout>
  <form id="loginForm" method="POST">
      <h2>Login</h2>
      <input name="username" type="text" placeholder="Username" required />
      <input name="password" type="password" placeholder="Password" required />
      <button type="submit">Login</button>
  </form>
  <script>
    async function handleLogin(event: SubmitEvent) {
      event.preventDefault();
      const formData = new FormData(event.target as HTMLFormElement);
      const user = {
        username: formData.get("username"),
        password: formData.get("password"),
      };

      try {
        const response = await fetch("/api/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(user),
        });

        if (response.ok) {
          const data = await response.json();
          document.cookie = `loggedIn=true; path=/;`;
          document.cookie = `username=${data.username}; path=/;`;
          window.location.href = "/";
        } else {
          alert("Invalid username or password.");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Failed to login.");
      }
    }

    const loginForm = document.getElementById("loginForm");
    if (loginForm) {
      loginForm.addEventListener("submit", handleLogin);
    } else {
      console.error("Login form not found.");
    }
  </script>
  <style>
    body {
      background-color: #1a1a1a;
      color: #f0f0f0;
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
    }
    form {
      background-color: #333333;
      padding: 20px;
      border-radius: 5px;
      width: 300px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    input {
      width: 100%;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #555555;
      border-radius: 5px;
      background-color: #2a2a2a;
      color: #f0f0f0;
    }
    button {
      width: 100%;
      padding: 10px;
      background-color: #e67e22;
      border: none;
      border-radius: 5px;
      color: #ffffff;
      cursor: pointer;
    }
    button:hover {
      background-color: #d35400;
    }
    @media (max-width: 768px) {
      form {
        width: 90%;
        padding: 15px;
      }
      input {
        padding: 8px;
      }
      button {
        padding: 8px;
      }
    }
    @media (max-width: 480px) {
      h2 {
        font-size: 1.5rem;
      }
      form {
        width: 100%;
        padding: 10px;
      }
    }
  </style>
</MainLayout>