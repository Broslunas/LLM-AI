---
import MainLayout from "@/layouts/MainLayout.astro";
---

<MainLayout title="Estadísticas" description="" >
  <div class="container">
    <div class="stats-columns">
      <section class="info-container" id="userStatsContainer" style="display: none;">
        <div class="stats-section">
          <h2>Estadísticas del Usuario</h2>
          <div class="stat-row">
            <div class="stat-box">
              <p class="stat-label">Nombre de Usuario:</p>
              <p class="stat-value" id="username">Cargando...</p>
            </div>
            <div class="stat-box">
              <p class="stat-label">Email:</p>
              <p class="stat-value" id="email">Cargando...</p>
            </div>
          </div>
          <div class="stat-row">
            <div class="stat-box">
              <p class="stat-label">Fecha de Registro:</p>
              <p class="stat-value" id="registrationDate">Cargando...</p>
            </div>
            <div class="stat-box">
              <p class="stat-label">Último Login:</p>
              <p class="stat-value" id="lastLogin">Cargando...</p>
            </div>
          </div>
          <div class="stat-box">
            <p class="stat-label">Mensajes Enviados:</p>
            <p class="stat-value" id="userMessages">Cargando...</p>
          </div>
        </div>
      </section>
      <div class="divider" id="divider" style="display: none;"></div>
      <section class="info-container">
        <div class="stats-section">
          <h2>Estadísticas Totales</h2>
          <div class="stat-box">
            <p class="stat-label">Total de Usuarios:</p>
            <p class="stat-value" id="totalUsers">Cargando...</p>
          </div>
          <div class="stat-box">
            <p class="stat-label">Total de Mensajes:</p>
            <p class="stat-value" id="totalMessages">Cargando...</p>
          </div>
        </div>
      </section>
    </div>
  </div>

  <script>
    const usernameElement = document.getElementById("username");
    const emailElement = document.getElementById("email");
    const userMessagesElement = document.getElementById("userMessages");
    const registrationDateElement = document.getElementById("registrationDate");
    const lastLoginElement = document.getElementById("lastLogin");
    const totalUsersElement = document.getElementById("totalUsers");
    const totalMessagesElement = document.getElementById("totalMessages");
    const userStatsContainer = document.getElementById("userStatsContainer");
    const divider = document.getElementById("divider");

    function getCookie(name: string): string | null {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) {
        const cookieValue = parts.pop()?.split(";").shift();
        return cookieValue || null;
      }
      return null;
    }

    async function fetchStats() {
      if (!totalUsersElement || !totalMessagesElement) {
        console.error("Stats elements not found.");
        return;
      }

      const username = getCookie("username");
      const isLoggedIn = getCookie("loggedIn") === "true";

      if (isLoggedIn && userStatsContainer && divider) {
        userStatsContainer.style.display = "block";
        divider.style.display = "block";
      }

      try {
        const res = await fetch("/api/stats", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ username: isLoggedIn ? username : null }),
        });
        if (!res.ok) {
          throw new Error("Failed to fetch stats");
        }
        const stats = await res.json();

        // Update total statistics
        totalUsersElement.textContent = stats.totalUsers || 0;
        totalMessagesElement.textContent = stats.totalMessages || 0;

        // Update user statistics if logged in
        if (isLoggedIn) {
          if (usernameElement) {
            usernameElement.textContent = stats.username || "Desconocido";
          }
          if (emailElement) {
            emailElement.textContent = stats.email || "No disponible";
          }
          if (userMessagesElement) {
            userMessagesElement.textContent = stats.userMessages || 0;
          }
          if (registrationDateElement) {
            registrationDateElement.textContent = stats.registrationDate || "No disponible";
          }
          if (lastLoginElement) {
            lastLoginElement.textContent = stats.lastLogin || "No disponible";
          }
        }
      } catch (err) {
        console.error("Error fetching stats:", err);
      }
    }
    fetchStats();
  </script>
  <style>
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
      font-family: "Minecraft", sans-serif;
      background-color: #333333;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .stats-section {
      background-color: #444444;
      border: 1px solid #555555;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 20px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .stats-section h2 {
      font-size: 2.2rem;
      margin-bottom: 15px;
      color: #e67e22;
      text-align: center;
    }

    .stat-row {
      display: flex;
      justify-content: space-between;
      margin-bottom: 15px;
    }

    .stat-box {
      flex: 1;
      margin: 0 10px;
      text-align: center;
      background-color: #2a2a2a;
      border-radius: 5px;
      border: 1px solid #555555;
    }

    .stat-label {
      font-size: 1.2rem;
      font-weight: bold;
      color: #e67e22;
      margin-bottom: 3px;
    }

    .stat-value {
      font-size: 1rem;
      color: #f0f0f0;
    }

    .divider {
      height: 2px;
      background-color: #555555;
      margin: 20px 0;
    }

    .stats-columns {
      display: flex;
      justify-content: space-between;
      gap: 20px;
    }

    .info-container {
      flex: 1;
    }

    @media (max-width: 768px) {
      .stats-columns {
        flex-direction: column;
      }
    }
  </style>
</MainLayout>
